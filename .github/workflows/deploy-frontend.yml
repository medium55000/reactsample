name: Deploy Frontend (dev/test/prod)

on:
  workflow_dispatch: {}
  push:
    branches: ["dev", "test", "main"]
    paths:
      - "frontend/**"

concurrency:
  group: frontend-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      CLOUDSDK_CORE_DISABLE_PROMPTS: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Map branch to environment
        id: map
        run: |
          if [ "${GITHUB_REF_NAME}" = "dev" ]; then
            echo "ENV=DEV" >> $GITHUB_OUTPUT
            echo "ENV_LOWER=dev" >> $GITHUB_OUTPUT
            echo "BUILD_MODE=development" >> $GITHUB_OUTPUT
          elif [ "${GITHUB_REF_NAME}" = "test" ]; then
            echo "ENV=TEST" >> $GITHUB_OUTPUT
            echo "ENV_LOWER=test" >> $GITHUB_OUTPUT
            echo "BUILD_MODE=test" >> $GITHUB_OUTPUT
          else
            echo "ENV=PROD" >> $GITHUB_OUTPUT
            echo "ENV_LOWER=prod" >> $GITHUB_OUTPUT
            echo "BUILD_MODE=production" >> $GITHUB_OUTPUT
          fi

      # 1) GCP 인증
      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets[format('GCP_SA_KEY_{0}', steps.map.outputs.ENV)] }}

      # 2) gcloud 설치 + 프로젝트 설정
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets[format('GCP_PROJECT_ID_{0}', steps.map.outputs.ENV)] }}

      # (선택) 인증 확인
      - name: Verify gcloud auth
        run: |
          gcloud --version
          echo "ACTIVE ACCOUNT:" && gcloud auth list --filter=status:ACTIVE --format='value(account)'
          echo "PROJECT:" && gcloud config list --format='value(core.project)'

      - name: Enable required APIs
        run: |
          gcloud services enable run.googleapis.com artifactregistry.googleapis.com cloudbuild.googleapis.com

      # Cloud Build config + substitutions (한 줄 인자!)
      - name: Build & Push Docker image (via Cloud Build config)
        env:
          PROJECT_ID: ${{ secrets[format('GCP_PROJECT_ID_{0}', steps.map.outputs.ENV)] }}
          REGION: ${{ secrets.GCP_REGION }}
          AR_REPO: ${{ secrets.AR_REPO }}
          ENV_LOWER: ${{ steps.map.outputs.ENV_LOWER }}
          BUILD_MODE: ${{ steps.map.outputs.BUILD_MODE }}
        run: |
          TAG=${GITHUB_SHA}
          gcloud builds submit frontend \
            --config=frontend/cloudbuild.yaml \
            --region="${REGION}" \
            --substitutions="_PROJECT_ID=${PROJECT_ID},_REGION=${REGION},_AR_REPO=${AR_REPO},_ENV_LOWER=${ENV_LOWER},_TAG=${TAG},_BUILD_MODE=${BUILD_MODE}"

      - name: Deploy to Cloud Run
        env:
          PROJECT_ID: ${{ secrets[format('GCP_PROJECT_ID_{0}', steps.map.outputs.ENV)] }}
          REGION: ${{ secrets[GCP_REGION] }}
          AR_REPO: ${{ secrets[AR_REPO] }}
          ENV_LOWER: ${{ steps.map.outputs.ENV_LOWER }}
        run: |
          TAG=${GITHUB_SHA}
          IMAGE="${REGION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPO}/frontend-${ENV_LOWER}:${TAG}"
          SERVICE="frontend-${ENV_LOWER}"
          gcloud run deploy "${SERVICE}" \
            --image "${IMAGE}" \
            --region "${REGION}" \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --quiet